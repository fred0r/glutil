 *  
 *  + = Added components
 *  - = Removed components
 *  ~ = Bugfix
 *  % = Change/update
 *  ! = Performance optimization
 *
 * v1.11:
 *
 *   - %! Rewrote matching routines to be more efficient
 *   - ~ -x --cdir segfaulting (rev. 1)
 *   - ! Improved performance when searching certain filesystem fields (rev. 2)
 *   - % Refuse executing macro if no execution priviledges to file (rev. 3)
 *
 * v1.10:
 *
 *   - + LOM/sorting signed integer processing support
 *   - + -R shortcut to -recursion (-x) (rev. 1)
 *
 * v1.9
 *
 *   - + --maxres, --maxhit, --ifres and --ifhit (see --help for details)
 *   - ~ filtering with --sort not working in certain cases
 *   - % Various improvements and bugfixes
 *   - ~ unsafe snprintf calls (rev. 1)
 *   - ~ online users data (-w) reading always failed (rev. 2)
 *   - ~ field arguments to string matches colliding with match param (rev. 3)
 *   - % Logical matching applies during -r and with buffering disabled (rev. 4)
 *   - % Each open log handle now holds it's own match instruction set (rev. 4)
 *   - ~ GENERIC-1 log changed field name (was 'time', should have been 'i32') (rev. 4)
 *   - + Processing records in reverse order (--rev) (rev. 5)
 *   - ~ matching broken with -x (rev. 6)
 *   - % Misc addons to -exec field vars (rev. 6)
 *   - + --execv, uses execv() instead of system() (--exec) (rev. 7)
 *   - ~ --sort caused --exec[v] not executing (rev. 7)
 *   - ~ internal argument parsing ignored last char (rev. 8)
 *   - % Abort rebuild when nothing was filtered (optional, --nofq) (rev. 9)
 *   - % Rebuild (-e) returns error if --nofq aborted (rev. 10)
 *   - % Path overrides can be given at macro launch (-m) (rev. 11)
 *   - ~ --maxhit/maxres ignored when no match given (rev. 12)
 *   - ~ regex expression compiled for each record (huge performance hit (rev. 13)
 *   - - Removed unecessary dirlog rebuild regex filter (C preprocessor macro) (rev. 14)
 *   - ~ SFV generation (rev. 15)
 *   - % Made GLCONF preprocessor macro in glconf.h unecessary (rev. 16)
 *   - ~ m:arg<2-3> macro vars were returned as m:arg1 (rev. 17)
 *   - + --esdir (redirect -execv stdout to file) (rev. 18)
 *   - % Reduced physical mem consumption (replaced unecessary calloc with malloc) (rev. 19)
 *   - ~ Fixed an integer overflow on BSD (rev. 20)
 *   - ~ attempted to free non-allocated memory (-r -f) (rev. 21)
 *   - ~ --esredir not redirecting (rev. 21)
 *   - ~ Fixed broken log path detection (rev. 21)
 *   - ~ automatic log path update wasn't working (rev. 22)
 *   - ~ regex expression got compiled for regular string matches (rev. 23)
 *   - + --ifrhe (rev. 24)
 *   - % Falls back to a default NUKESTR if it's not read from glftpd.conf (rev. 25)
 *   - % {mode} returns "-1" if lstat fails (rev. 26)
 *   - + --noglconf, disable reading settings from glftpd.conf (rev. 27)
 *   - ! - 60-70% faster string match processing for most fields (rev. 28)
 *   - % Logical/relational matches apply to filesystem objects (-x) (rev. 29)
 *   - + various file/directory information fields (see MANUAL) (rev. 29)
 *   - + --maxdepth=<limit> (-x) (rev. 30)
 *   - + uperm, gperm, operm and isread, iswrite, isexec fields (-x) (rev. 30)
 *   - + Disable POSIX extended regex (--noereg) (rev. 31)
 *   - %! Disabled exception tracing helper functions (rev. 31)
 *   - + --mindepth=<depth> (-x) (rev. 32)
 *   - + links field (see MANUAL under FILESYSTEM) (-x) (rev. 32)
 *   - ~ Command line arguments processing stuck in perm loop (some platforms) (rev. 33)
 *   - % Standardized field names (see MANUAL) (rev.34)
 *   - + --fd option (-x) (rev. 35)
 *   - % On error print help before message (rev. 36)
 *   - ~ Recursor properly follows symlinks upon request (-x [-y]) (rev. 37)
 *   - - Unecessary 'mode' field with dupefile (rev. 38)
 *   - + Related filesystem info extraction (x:<field>, see MANUAL) (rev. 39)
 *   - %! Basedir extraction was too costly (matching/exec) (rev. 39)
 *   - ! Logic operations perform a bit faster (only in certain cases) (Rev. 40)
 *   - % --noglconf applies when calling macro (-m) (rev. 41)
 *   - + --glconf=<file>, overrides default path to glftpd.conf (rev. 41)
 *   - + --prune, removes exact data record duplicates on import (-z) (rev. 41)
 *   - % Filesystem loop detection (-x) (rev. 41)
 *   - ~ build_data_path was broken (since 1.9-41) (rev. 42)
 *   - + Plot field (imdblog) (rev. 43)
 *   - ~ Fixed max input length for iMDB synopsis (rev. 44)
 *   - % --batch shows plot (rev. 45)
 *   - + crc32 and dec-crc32 fields (-x) (rev. 46)
 *   - ~ 'xg:' extra reference field was broken globally (rev. 47)
 *   - ~ Potential overflow when referencing x:<field> (rev. 48)
 *   - % Reduced default ASCII data file buffer size to 32MB (rev. 49)
 *   - + --memlimita=<bytes>, overrides default ASCII data buffer size (rev. 49) 
 *   - ~ {director} returning title (imdblog) (rev. 50)
 *   - % --[i]matchq works in rebuild mode (-e) (rev. 50)
 *   - ~ Plugged memory leak in file_crc32 (rev. 51)
 *   - % rtv_q cleans output buffer on error (rev. 52)
 *   - + 'curtime' field (rev. 53)
 *   - + Add 'genre', 'country' and 'seasons' fields to --batch output (-h) (rev. 54)
 *   - ~ Memory leak when searching inside files (rev. 55)
 *   - % Detect error/eof while reading files (cfg parser) and macros (rev. 56)
 *   - !% Reduce max. macro line size to 32k (SSD_MAX_LINE_SIZE) (rev. 57)
 *   - + Add 'startyear', 'endyear' and 'network' fields (tvrage log) (rev. 58)
 *   - ~ Quit on first match/result failing when parsing (rev. 59)
 *   - ~ --sort segfaulting in certain cases (rev. 60)
 *   - ~ Quit on first match/result broken in rebuild mode (-e) (rev. 60)
 *   - ~ Only the last given 'curtime+/-' field was taken into account (rev. 60)
 *   - ~ A 'fgets' was called with bigger size than length of destination buffer(rev. 60)
 *   - + Add 'blocks', 'major', 'minor' fields (FILESYSTEM) (rev. 60)
 *   - ~ file_crc32 mis-calculated data larger than 26214400 bytes (rev. 61)
 *   - ! file_crc32 optimized for performance (rev. 61)
 *   - % Dirlog rebuild (-r) quits if folders file missing, instead of forcing full rescan (rev. 62)
 *   - ~ sfvgen (--sfv) placed files in parent dirs of target (rev. 63)
 *   - ~ Fix timestamps to be represented as signed integers (rev. 64)
 *   - ~ Fix integer type representation relating to various logs (rev. 65) 
 *   - ~ Default log path building was broken (rev. 66)
 *   - + Add 'ndir' field, see MANUAL (ONLINE users) (rev. 67)
 *   - ~ Matching comparison logic not taking all params into account in certain cases (rev. 68)
 *   - % Do not retrieve current time each cycle (-x, 'curtime') (rev. 69)
 *   - + Add 'sparse' field (FILESYSTEM) (rev. 70)
 *   - ~ 'curtime' with no math (+-) operators was always 0 (since rev.69) (rev. 71)
 *   - % Changed 'year' field type from char[8] to unsigned short (rev. 72)
 *   - %! Text data loading more efficient (rev. 72)
 *   - + GENERIC-2 log-type (rev. 73)
 *   - ~ Misaligned imdblog header (since rev.72) (rev. 74)
 *   - ~ --max[res|hit] not working with --sort (rev. 75)
 *
 * v1.8
 *
 *   - + Multi-purpose generic log data types (see MANUAL and --help)
 *   - ~ log path strings not null-terminated on override in some cases (rev. 1)
 *   - + PID to compact WHO output (rev. 2)
 *   - ~ data file rebuild wasn't filtering write buffer, filtering works everywhere now (rev. 3)
 *   - + more levels to force (-ff) (rev. 3)
 *   - % Improved -z behaviour (rev. 3)
 *   - ~ readdir() not handling DT_UNKNOWN properly (file type detection failed on certain systems) (rev. 4)
 *   - ~ full siteroot recursion never flushed buffered data to file (-r) (rev. 5)
 *   - + --shmem, buffering to shared mem segment (see --help) (rev. 6)
 *   - ~ tvrage log had no IPC key assigned (--shmem) (rev. 7)
 *   - % Minor changes (rev. 7)
 *   - + 'memlimit' and 'glconf' general fields, see MANUAL (rev. 7-8)
 *   - + nuke status to -n --batch (rev. 8)
 *   - + Read data from binary source and merge (-z --binary) (rev. 8)
 *   - ~ full siteroot recursion never flushed buffered data to file (-r -f) (rev. 9)
 *   - ~ -r was not skipping missing log path detection as it should (rev. 10)
 *
 * v1.7
 *
 *   - + matching by comparison/relational and logical operators, --[i]lom <expression>
 *   - -x can pass file {size} along to shell (rev. 1)
 *   - ~ plugged memory leak when --[i]lom given repeatedly (rev. 1)
 *   - ~ flag collision (removed -k alias for --nowrite) (rev. 2)
 *   - ~ LOM strings were getting processed when not requested (rev. 2)
 *   - ~ -z was not skipping missing log path detection as it should (rev. 3)
 *   - % --exec {basedir} while parsing imdblog (rev. 3)
 *   - ~ Shared memory segment weren't read properly (-w) (rev. 4)
 *   - ~ verbose output loaded records always showed zero (rev. 4)
 *   - + 'nukestr' global var (rev. 5)
 *   - + Created new data format (TVRAGE) (rev. 6)
 *   - + -h (see --help) (rev. 6)
 *   - ~ variable processing failed in certain cases (rev. 7)
 *   - ~ -x strange behaviour (rev. 8)
 *   - % Changed key/token delimiter (from : to @) when extracting config values (rev. 8)
 *   - + In between match arguments, logical or|and operators apply (rev. 9)
 *   - ~ logical operators between matches weren't taking inverted match into account (rev. 10)
 *   - ~ logical operators between matches not processed properly (rev. 11)
 *   - ~ match argument processing matched LOM when not requested (rev. 12)
 *   - ~ -e odd return value (rev. 13)
 *   - ~ extremely wastefull directory tree parsing (rev. 14)
 *   - + 'mode' field (-x) (rev. 14)
 *   - + 'mode' field to -d, -n, -i, -a, -h and -k (rev. 14)
 *
 * v1.6
 *
 *   - + --sort (see --help)
 *   - ~ extracting fields was broken with -w
 *   - % Layered matching; multiple --[i]regex[i] and --[i]match params can be used (rev. 1)
 *   - --[i]match can match against specific log fields same way as --[i]regex[i] (rev. 1)
 *   - ~ Progress stats showed when not requested (-p) (rev. 2)
 *   - ~ plugged memory leak when --sort given repeatedly (rev. 2)
 *   - ~ -x was broken (since 1.6-2) (rev. 3)
 *   - % Config lines (and tokens) can be passed as <field> to --[i]regex[i] and --[i]match (rev. 3) 
 *   - ~ g_filter didn't check if match requested before starting (rev. 4)
 *   - ~ --raw spat ASCII junk to stdout (rev. 4)
 *   - ! Optimized data record formatting functions (rev. 5)
 *   - ~ g_print_stats persisted nukelog searches after first failure (rev. 6)
 *
 * v1.5
 *
 *   - Now possible to match against specific binary log fields 
 *       (--[i]regex[i] only, see --help)
 *   - ~ regex type/match delimiter was broken (rev. 1)
 *   - ~ --batch was using a conflicting delimiter (rev. 2)
 *
 * v1.4
 *
 *   - Now possible to write binary records, using only ASCII format input (scripts not
 *       only recieve binary data, but can write it back to log too)
 *   - + Created new data format (iMDB log)
 *   - + -a, -z <log>, --[i]matchq, --dirc (see --help)
 *   - % Various behaviour changes and improvements + minor bugfixes
 *   - % Writing records works with dirlog, nukelog and imdblog (rev. 1)
 *   - ~ some return values were always 0 (rev. 2)
 *   - ! Optimized -p for speed (rev. 3)
 *   - ~ Temp file wasn't removed after rebuild (rev. 4)
 *   - ! Dupe check optimized for speed more (rev. 5)
 *   - + write support for dupelog, lastonlog and oneliners (-z) (rev. 6)
 *   - + title, year, rated, released, runtime, actors and director fields to imdb log (rev. 7)
 *   - % Get self path BSD compatibility (rev. 8)
 *   - + Created new data format (game log) (rev. 9)
 *   - + -k (gamelog print) and -b (alias for --backup) (rev. 9)
 *   - + Priority operations processing logging (rev. 10)
 *   - % Minor code fixes (rev. 10)
 *   - % Replaced sprintf with more secure snprintf (rev. 11)
 *   - % FreeBSD compatibility (compiles with default glconf.h now) (rev. 12)
 *   - ~ FreeBSD get self path was still broken (rev. 13)
 *   - % Intercept stupid siteroot config and adapt (rev. 13)
 *   - ~ buffer overflows in g_handle->path(rev. 14)
 *
 * v1.3
 *
 *   - Renamed project to 'glutil'
 *   - + Can extract tokens from user/group files (e.g. {WKUP:3} {ALLUP:1} etc..)
 *   - + Prints users (-t) / groups (-g), extracts any data from users
 *        as --exec vars, filters apply (rev. 1)
 *   - ~ empty config lines weren't properly handled causing segfaults (rev. 2)
 *   - ~ BSD compatibility (rev. 3)
 *   - ~ --check was not detecting nuked dirs properly (rev. 4)
 *   - + --ghost (rev. 4)
 *   - + stats & progress report for -p (dupecheck) (rev. 5)
 *   - ~ Progress percentage stats were broken (-p -v) (rev. 6)
 *   - ~ division by zero (-p -v) (rev. 7)
 *   - ~ regex matching was ignoring match-beginning-of-line operator (^) (rev. 8)
 *   - + -x, directory/file parser with --exec (and filter) hooks (rev. 9)
 *   - ~ -r failed to detect root directories (rev. 10)
 *   - + --xdev, --xblk (see --help) (rev. 10)
 * 
 * v1.2
 *
 *   - It's now possible to define macros, command execution templates for scripts 
 *        and easily execute them with -m <macro>
 *   - + --fork (rev. 1)
 *   - + --match and --imatch (normal text matches) (rev. 2)
 *   - + --arg<1-3> <argument> (used only with -m, fills variables 
 *        {m:arg<1-3>}) (rev. 3)
 *   - ~ priority commands processing failed when non-prio arguments were
 *        given (rev. 3)
 *   - ~ getting own path was broken (not zero terminated) (rev. 3)
 *   - ~ priority flags were not always selected first (rev. 5)
 *   - + --sleep <seconds> (rev. 5)
 *   - + --preexec and --postexec (see --help) (rev. 6)
 *   - Optimized memory usage (rev. 7)
 *   - + --backup <data type>, --nobackup, --[u]sleep <timeout> (rev. 8)
 *   - Fixed --[pre|post]exec to process variables in command string (rev. 8)
 *   - Various fixes and improvements (rev. 8)
 *   - Users data (/users/*) fecthing with argument variables works fully (rev. 9)
 *   - ~ temp file was not unique, causing collisions when multiple
 *        processes running  at once in rebuild mode (rev. 10)
 *   - + {usroot} and {logroot} argument variables (rev. 11)
 *   - Fixed user/group file processing to dump whole lines (argument variables) (rev. 12)
 *
 * v1.1
 *
 *   - + --loglevel, --logfile, --silent, --ftime (see --help)
 *   - + Logging system
 *   - + more logging levels (rev. 1)
 *   - + init string (rev. 1)
 *   - ~ memory leaks (rev. 2)
 *   - ~ more mem leaks (rev. 3)
 *   - ~ some file handles weren't getting cleaned up (rev. 4)
 *   - ~ formatted strings were printing in main on raw dump (rev. 5) 
 *
 * v1.0
 *
 *   - FreeBSD compatibility
 *   - + Reads settings from glftpd.conf
 *   - % Reverts to default data paths, when defined ones are missing (rev. 1)
 *   - % Minor fixes (rev. 2)
 *   - ~ dirlog update was broken (rev. 2)
 *   - % Flushes write buffer to disk,  if it gets too big (> 100000 records) (rev. 3)
 *   - % --sfv used with -s doesn't modify dirlog anymore (rev .3)
 *   - ! Performance boost (filesystem dirlog rebuild mode) (rev. 4)
 *   - % Displays user transfer speed (-w) (rev. 5)
 *   - % Minor formatting fixes (rev. 5)
 *   - + Compact WHO view (rows and columns) (./dirupdate -w --comp) (rev. 6)
 *   - ~ WHO segfaulted (rows and tables were misaligned) (rev. 7)
 *   - + {rate}, {lupdtime} and {lxfertime} (used with WHO) --exec args (rev. 8)
 *   - % Exception handling returns errno (rev. 9)
 *   - + generic -exec args {glroot} and {exe} (full path to executable) (rev. 10)
 *   - ~ SFV gen with -s was not working properly (rev. 10)
 *   - ~ SFV gen failed to clean old .sfv files, before entering subdir (rev. 11)
 *   - + --loop=<interval> and --daemon (see --help) (rev. 12)
 *   - % Dirlog search takes nuke string into account (reads from glftpd.conf) (rev. 13)
 *   - ~ shared memory wasn't freed on exit (rev. 14)
 *   - + --loopexec (rev. 14)
 *   - % WHO prints status (rev. 14)
 *   - ~ small memory leaks plugged (rev. 15)
 *
 * v0.10 RC2:
 *
 *   - + support for dupefile and last-on log (filtering and
 *       displaying in human readable format) (see --help) (added 
 *       insertable vars for new data-types to --exec)
 *   - ~ flag collision (rev. 1)
 *   - + suport for onliners data file (rev. 1)
 *   - Shared memory segment read support (rev. 2)
 *   - + -w (dumps from ONLINE data) (rev. 2)
 *   - + --ipc <key> (rev. 2) 
 *
 * v0.9 RC1:
 *
 *   - Exception signal handlers (with internal trace)
 *   - + inverted regex match options (--iregex and --iregexi) (rev. 1)
 *   - --(i)regex(i) and --exec matching applies to -d now too (rev .1)
 *   - + --raw: used with -d, dumps raw dirlog packets to stdout (filtering
 *       applies) (rev. 2)
 *   - Improved exception tracing (rev. 2)
 *   - --(i)regex(i) and --exec matching applies to --dupechk now too (rev .2)
 *   - ~ -u (update) was not finding existing nuked folders properly (rev. 3)
 *   - Various smaller bugfixes (rev. 3)
 *   - Big performance optimization (~200%) on certain IO routines  - much faster
 *       memory loading and data file writing (except during filesystem rebuild
 *       mode -r) (rev. 3)
 *   - + --wbuffer, optional explicit write pre-caching (rev .4)
 *   - Various smaller bugfixes (rev. 4)
 *   - ~ repeated slashes in path strings were causing mis-matches (rev. 5)
 *   - Fixed some performance issues caused in revision 4 (rev. 6)
 *   - SFV generation attempts to restore modification date after writing (rev. 7)
 *   - ~ --wbuffer mode was broken (especially when doing -r -u) (rev. 7)
 *   - File copy procedures now use native IO functions instead of POSIX (rev. 7)
 *   - ~ backups weren't created before certain operations (rev. 7)
 *   - ~ Backups were created twice in certain modes (rev. 8)
 *   - + corrupt dirlog detection to --check (invalid file size) (rev. 8)
 *   - Filtering works with nukelog dumps (-n) (rev. 8)
 *   - --fix removes ghost entries (rev. 8)
 *   - zlib is no longer required (crc32 calculation is built in) (rev. 9)
 *   - Made explicit write pre-caching default (turns off with --nowbuffer) (rev. 10)
 *   - --sfv now works standalone too (rev. 10)
 *   - ~ Backup was not avoiding 0-byte data files (rev. 11)
 *   - Rebuild (-r) was broken (since rev. 10) (rev. 11)
 *   - ~ some in-memory searching routines were broken (rev. 11)
 *   - ~ -s used with --sfv resulted in a recursive import (rev. 12)
 *   - ~ permissions weren't inherited properly (rev. 13)
 *   - ~ rebuild update mode (-r -u) failed when no existing dirlog (rev. 13)
 *   - ~ nukelog dump/filtering was not working properly (rev. 14)
 *   - ~ removed data records (in memory) were not unlinked properly, 
 *       causing filtering to fail on first record in chain (rev. 14)
 *
 * v0.8:
 *
 *   - + host and child process signal handlers (CTRL^C from child proc
 *       is detected too)
 *   - + dirlog rebuild mode (-e or --rebuild) (rev. 1)
 *   - + --regex global regex filter (rev. 1)
 *   - Multiple bugfixes (rev. 2)
 *   - + --regexi (case insensitive regex filter) (rev. 2)
 *   - --(i)regex(i) made to work with -r mode (rev. 2)
 *
 * v0.7:
 *
 *   - + --exec, command hook during certain parsing operations
 *   - Fixed --exec to skip importing dirlog record, if call returns non-zero
 *       (rev. 1)
 *   - + -y, follows symbolic links (default is to skip) (rev. 2)
 *   - ~ --dupechk wasn't checking if match string lenghts are the same (rev. 3)
 *   - ~ skipping empty directories was failing (since 0.7-1) ,
 *   -   empty directories weren't getting detected 100% properly (rev. 4)
 *   - + --batch, outputs dirlog records non-formatted (for easier parsing with
 *       external tools) (rev. 5)
 *
 * v0.6:
 *
 *  - + --fix, attempts to correct differences between filesystem and dirlog
 *     (works together with --check)
 *  - Various bugfixes
 *  - Got rid of unecessary explicit dirlog/nukelog IO functions
 *     (g_fopen/g_close/g_read routines do everything now)
 *  - ~ -s was broken (since 0.6) (rev. 1)
 *  - ~ --check was processing nuked releases as non-nuked (since 0.6) (rev. 1)
 *  - ~ directory nuke status wasn't read properly from nukelog; in cases when
 *      directory was nuked/unnuked multiple times, multiple records can exist in
 *      nukelog - only last one should be read (rev. 2)
 *  - Settings macro's can now be overriden from includes (usefull for storing
 *      customized settings) (rev .3)
 *  - Modified --fix to remove empty directories (rev. 4)
 *  - File seeking 64 bit aligned (rev. 4)
 *  - Code cleanup (rev .4)
 *
 * v0.5:
 *
 *  - Dirlog and nukelog now fully buffers into memory (large performance
 *  	improvement); if data file is larger than DB_MAX_SIZE (--memlimit),
 *  	buffering is not used (-v prints notices about this)
 *  - + --nobuffer, turns off buffering
 *  - ~ --siteroot didn't have any effect (rev. 2)
 *  - + --dupechk: looks for duplicate records within dirlog and prints
 *      to stdout (rev. 3)
 *  - ~ command line options were not read properly in some cases (rev. 4)
 *  - + --memlimit, overrides the default max buffer limit defined by
 *      DB_MAX_SIZE macro (rev. 4)
 *  - Fixed command line args processing to abort & warn when not enough
 *      parameters supplied (rev. 5)
 *  - + -u, updates dirlog instead of rebuilding it (used with -r) (rev. 6)
 *
 * v0.4:
 *
 *  - + nukelog read capability
 *  - ~ now sets proper dir status by referencing nukelog,
 *      instead of setting status based on directory nuke labels
 *  - + --nukedump - prints nukelog to stdout (formatted)
 *  - While dumping dirlog (-d), looks up nukelog and prints nuke
 *      stats, if any
 *  - Verification (--check) now takes into account the nukelog:
 *      checks if status flags (dirlog<->nukelog) match,
 *      warns on missing nukelog entries
 *  - + --help
 *  - Now does full siteroot recursion when .folders file is missing or -f
 *      flag is given (rev. 1)
 *  - + regex skip filters at dirlog import (PREG_DIR_SKIP macro) (rev. 2)
 *
 *
 * v0.3:
 *
 *  - ~ dirlog data header was misaligned, added support
 *     	for multiple gl versions (determined by GLVERSION var)
 *  - ~ absolute paths  instead of relative to root set used
 *     	in dirname field of the data header
 *  - ~ nuked dirs imported without proper status set in data
 *  	header
 *  - + -s option, imports individual folders; use quotation
 *     	marks if adding multiple folders (e.g -s "/dir1 /dir2 /dir3")
 *  - SFV generation, --sfv option when importing will generate
 *     	new sfv files and remove existing ones
 *  - + --nowrite, acts normally except it does no actual writing
 *  	(including SFV gen)
 *  - ~ on some systems, file type was not recognized properly by
 *  	readdir, instead it now gets info from stat function (rev. 1)
 *  - ~ dirlog data was not displayer properly on 32 bit systems (rev. 2)
 *  - ~ failed creating new backup when one already existed (rev. 3)
 *  - + --glroot, --siteroot, --dirlog and --folders options (rev. 4)
 *  - .folders file now requires paths relative to siteroot (no / needed in
 *  	front) (rev. 4)
 *  - Requires glconf.h from /bin/sources to determine proper headers, compile from
 *  	that folder or set proper path to glconf.h in dirupdate.c (rev. 4)
 *  - Command line arguments now use '=' with some options (e.g. glroot=/glftpd)
 *  	(rev. 4)
 *  - Stats output on write fixed (was not showing properly or not at all) (rev. 5)
 *  - Output formatting fixed up a bit (rev. 5)
 *  - ~ --check output formatting was broken (rev. 5)
 *  - ~ -f (force) overwrite when doing -s was broken (rev. 6)
 *  - Output formatting fix (rev. 6)
 *  - Various small bugfixes and improvements in all revisions
 *
 * v0.2:
 *
 *  - ~ directory handles weren't getting cleaned
 *    	up on recursion, hitting max open handle limit.
 *  - Flag parser, easy to add new command line arg options
 *  - + -r option (recursive dirlog generation), reads
 *    	folders and depths from a file specified by DU_FLD
 *  - Backs up dirlog before modifying it
 *  - + -v (verbose), -vv (more verbose) and -f
 *    	(force) options
 *  - + -d (outputs records to stdout, formatted)
 *  - + --check, compares records in dirlog and filesystem
 *   	and warns on differences
 *
