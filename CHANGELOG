 * v1.7
 *
 *   - Added matching by comparison/relational and logical operators, --[i]lom <expression>
 *   - -x can pass file {size} along to shell (rev. 1)
 *   - Bugfix: plugged memory leak when --[i]lom given repeatedly (rev. 1)
 *   - Bugfix: flag collision (removed -k alias for --nowrite) (rev. 2)
 *   - Bugfix: LOM strings were getting processed when not requested (rev. 2)
 *   - Bugfix: -z was not skipping missing log path detection as it should (rev. 3)
 *   - --exec {basedir} while parsing imdblog (rev. 3)
 *   - Bugfix: Shared memory segment weren't read properly (-w) (rev. 4)
 *   - Bugfix: verbose output loaded records always showed zero (rev. 4)
 *   - Added 'nukestr' global var (rev. 5)
 *   - Created new data format (TVRAGE) (rev. 6)
 *   - Added -h (see --help) (rev. 6)
 *   - Bugfix: variable processing failed in certain cases (rev. 7)
 *   - Bugfix: -x strange behaviour (rev. 8)
 *   - Changed key/token delimiter (from : to @) when extracting config values (rev. 8)
 *   - In between match arguments, logical or|and operators apply (rev. 9)
 *   - Bugfix: logical operators between matches weren't taking inverted match into account (rev. 10)
 *
 * v1.6
 *
 *   - Added --sort (see --help)
 *   - Bugfix: extracting fields was broken with -w
 *   - Layered matching; multiple --[i]regex[i] and --[i]match params can be used (rev. 1)
 *   - --[i]match can match against specific log fields same way as --[i]regex[i] (rev. 1)
 *   - Progress stats showed when not requested (-p) (rev. 2)
 *   - Bugfix: plugged memory leak when --sort given repeatedly (rev. 2)
 *   - Bugfix: -x was broken (since 1.6-2) (rev. 3)
 *   - Config lines (and tokens) can be passed as <field> to --[i]regex[i] and --[i]match (rev. 3) 
 *   - g_filter didn't check if match requested before starting (rev. 4)
 *   - Bugfix: --raw spat ASCII junk to stdout (rev. 4)
 *   - Optimized data record formatting functions (rev. 5)
 *   - Bugfix: g_print_stats persisted nukelog searches after first failure (rev. 6)
 *
 * v1.5
 *
 *   - Now possible to match against specific binary log fields 
 *       (--[i]regex[i] only, see --help)
 *   - Bugfix: regex type/match delimiter was broken (rev. 1)
 *   - Bugfix: --batch was using a conflicting delimiter (rev. 2)
 *
 * v1.4
 *
 *   - Now possible to write binary records, using only ASCII format input (scripts not
 *       only recieve binary data, but can write it back to log too)
 *   - Created new data format (iMDB log)
 *   - Added -a, -z <log>, --[i]matchq, --dirc (see --help)
 *   - Various behaviour changes and improvements + minor bugfixes
 *   - Writing records works with dirlog, nukelog and imdblog (rev. 1)
 *   - Bugfix: some return values were always 0 (rev. 2)
 *   - Optimized -p for speed (rev. 3)
 *   - Bugfix: Temp file wasn't removed after rebuild (rev. 4)
 *   - Dupe check optimized for speed more (rev. 5)
 *   - Added write support for dupelog, lastonlog and oneliners (-z) (rev. 6)
 *   - Added title, year, rated, released, runtime, actors and director fields to imdb log (rev. 7)
 *   - Get self path BSD compatibility (rev. 8)
 *   - Created new data format (game log) (rev. 9)
 *   - Added -k (gamelog print) and -b (alias for --backup) (rev. 9)
 *   - Priority operations processing logging (rev. 10)
 *   - Minor code fixes (rev. 10)
 *   - Replaced sprintf with more secure snprintf (rev. 11)
 *   - FreeBSD compatibility (compiles with default glconf.h now) (rev. 12)
 *   - FreeBSD get self path was still broken (rev. 13)
 *   - Intercept stupid siteroot config and adapt (rev. 13)
 *   - Bugfix: buffer overflows in g_handle->path(rev. 14)
 *
 * v1.3
 *
 *   - Renamed project to 'glutil'
 *   - Can extract tokens from user/group files (e.g. {WKUP:3} {ALLUP:1} etc..)
 *   - Prints users (-t) / groups (-g), extracts any data from users
 *       as --exec vars, filters apply (rev. 1)
 *   - Bugfix: empty config lines weren't properly handled causing segfaults (rev. 2)
 *   - Bugfix: BSD compatibility (rev. 3)
 *   - Bugfix: --check was not detecting nuked dirs properly (rev. 4)
 *   - Added --ghost (rev. 4)
 *   - Added stats & progress report for -p (dupecheck) (rev. 5)
 *   - Bugfix: Progress percentage stats were broken (-p -v) (rev. 6)
 *   - Bugfix: division by zero (-p -v) (rev. 7)
 *   - Bugfix: regex matching was ignoring match-beginning-of-line operator (^) (rev. 8)
 *   - Added -x, directory/file parser with --exec (and filter) hooks (rev. 9)
 *   - Bugfix: -r failed to detect root directories (rev. 10)
 *   - Added --xdev, --xblk (see --help) (rev. 10)
 * 
 * v1.2
 *
 *   - It's now possible to define macros, command execution templates for scripts 
 *        and easily execute them with -m <macro>
 *   - Added --fork (rev. 1)
 *   - Added --match and --imatch (normal text matches) (rev. 2)
 *   - Added --arg<1-3> <argument> (used only with -m, fills variables 
 *        {m:arg<1-3>}) (rev. 3)
 *   - Bugfix: priority commands processing failed when non-prio arguments were
 *        given (rev. 3)
 *   - Bugfix: getting own path was broken (not zero terminated) (rev. 3)
 *   - Bugfix: priority flags were not always selected first (rev. 5)
 *   - Added --sleep <seconds> (rev. 5)
 *   - Added --preexec and --postexec (see --help) (rev. 6)
 *   - Optimized memory usage (rev. 7)
 *   - Added --backup <data type>, --nobackup, --[u]sleep <timeout> (rev. 8)
 *   - Fixed --[pre|post]exec to process variables in command string (rev. 8)
 *   - Various fixes and improvements (rev. 8)
 *   - Users data (/users/*) fecthing with argument variables works fully (rev. 9)
 *   - Bugfix: temp file was not unique, causing collisions when multiple
 *        processes running  at once in rebuild mode (rev. 10)
 *   - Added {usroot} and {logroot} argument variables (rev. 11)
 *   - Fixed user/group file processing to dump whole lines (argument variables) (rev. 12)
 *
 * v1.1
 *
 *   - Added --loglevel, --logfile, --silent, --ftime (see --help)
 *   - Logging system
 *   - Added more logging levels (rev. 1)
 *   - Added init string (rev. 1)
 *   - Bugfix: memory leaks (rev. 2)
 *   - Bugfix: more mem leaks (rev. 3)
 *   - Bugfix: some file handles weren't getting cleaned up (rev. 4)
 *   - Bugfix: formatted strings were printing in main on raw dump (rev. 5) 
 *
 * v1.0
 *
 *   - FreeBSD compatibility
 *   - Reads settings from glftpd.conf
 *   - Reverts to default data paths, when defined ones are missing (rev. 1)
 *   - Minor fixes (rev. 2)
 *   - Bugfix: dirlog update was broken (rev. 2)
 *   - Flushes write buffer to disk,  if it gets too big (> 100000 records) (rev. 3)
 *   - --sfv used with -s doesn't modify dirlog anymore (rev .3)
 *   - Performance boost (filesystem dirlog rebuild mode) (rev. 4)
 *   - Displays user transfer speed (-w) (rev. 5)
 *   - Minor formatting fixes (rev. 5)
 *   - Compact WHO view (rows and columns) (./dirupdate -w --comp) (rev. 6)
 *   - Bugfix: WHO segfaulted (rows and tables were misaligned) (rev. 7)
 *   - Added {rate}, {lupdtime} and {lxfertime} (used with WHO) --exec args (rev. 8)
 *   - Exception handling returns errno (rev. 9)
 *   - Added generic -exec args {glroot} and {exe} (full path to executable) (rev. 10)
 *   - Bugfix: SFV gen with -s was not working properly (rev. 10)
 *   - Bugfix: SFV gen failed to clean old .sfv files, before entering subdir (rev. 11)
 *   - Added --loop=<interval> and --daemon (see --help) (rev. 12)
 *   - Dirlog search takes nuke string into account (reads from glftpd.conf) (rev. 13)
 *   - Bugfix: shared memory wasn't freed on exit (rev. 14)
 *   - Added --loopexec (rev. 14)
 *   - WHO prints status (rev. 14)
 *   - Bugfix: small memory leaks plugged (rev. 15)
 *
 * v0.10 RC2:
 *
 *   - Added support for dupefile and last-on log (filtering and
 *       displaying in human readable format) (see --help) (added 
 *       insertable vars for new data-types to --exec)
 *   - Bugfix: flag collision (rev. 1)
 *   - Added suport for onliners data file (rev. 1)
 *   - Shared memory segment read support (rev. 2)
 *   - Added -w (dumps from ONLINE data) (rev. 2)
 *   - Added --ipc <key> (rev. 2) 
 *
 * v0.9 RC1:
 *
 *   - Exception signal handlers (with internal trace)
 *   - Added inverted regex match options (--iregex and --iregexi) (rev. 1)
 *   - --(i)regex(i) and --exec matching applies to -d now too (rev .1)
 *   - Added --raw: used with -d, dumps raw dirlog packets to stdout (filtering
 *       applies) (rev. 2)
 *   - Improved exception tracing (rev. 2)
 *   - --(i)regex(i) and --exec matching applies to --dupechk now too (rev .2)
 *   - Bugfix: -u (update) was not finding existing nuked folders properly (rev. 3)
 *   - Various smaller bugfixes (rev. 3)
 *   - Big performance optimization (~200%) on certain IO routines  - much faster
 *       memory loading and data file writing (except during filesystem rebuild
 *       mode -r) (rev. 3)
 *   - Added --wbuffer, optional explicit write pre-caching (rev .4)
 *   - Various smaller bugfixes (rev. 4)
 *   - Bugfix: repeated slashes in path strings were causing mis-matches (rev. 5)
 *   - Fixed some performance issues caused in revision 4 (rev. 6)
 *   - SFV generation attempts to restore modification date after writing (rev. 7)
 *   - Bugfix: --wbuffer mode was broken (especially when doing -r -u) (rev. 7)
 *   - File copy procedures now use native IO functions instead of POSIX (rev. 7)
 *   - Bugfix: backups weren't created before certain operations (rev. 7)
 *   - Bugfix: Backups were created twice in certain modes (rev. 8)
 *   - Added corrupt dirlog detection to --check (invalid file size) (rev. 8)
 *   - Filtering works with nukelog dumps (-n) (rev. 8)
 *   - --fix removes ghost entries (rev. 8)
 *   - zlib is no longer required (crc32 calculation is built in) (rev. 9)
 *   - Made explicit write pre-caching default (turns off with --nowbuffer) (rev. 10)
 *   - --sfv now works standalone too (rev. 10)
 *   - Bugfix: Backup was not avoiding 0-byte data files (rev. 11)
 *   - Rebuild (-r) was broken (since rev. 10) (rev. 11)
 *   - Bugfix: some in-memory searching routines were broken (rev. 11)
 *   - Bugfix: -s used with --sfv resulted in a recursive import (rev. 12)
 *   - Bugfix: permissions weren't inherited properly (rev. 13)
 *   - Bugfix: rebuild update mode (-r -u) failed when no existing dirlog (rev. 13)
 *   - Bugfix: nukelog dump/filtering was not working properly (rev. 14)
 *   - Bugfix: removed data records (in memory) were not unlinked properly, 
 *       causing filtering to fail on first record in chain (rev. 14)
 *
 * v0.8:
 *
 *   - Added host and child process signal handlers (CTRL^C from child proc
 *       is detected too)
 *   - Added dirlog rebuild mode (-e or --rebuild) (rev. 1)
 *   - Added --regex global regex filter (rev. 1)
 *   - Multiple bugfixes (rev. 2)
 *   - Added --regexi (case insensitive regex filter) (rev. 2)
 *   - --(i)regex(i) made to work with -r mode (rev. 2)
 *
 * v0.7:
 *
 *   - Added --exec, command hook during certain parsing operations
 *   - Fixed --exec to skip importing dirlog record, if call returns non-zero
 *       (rev. 1)
 *   - Added -y, follows symbolic links (default is to skip) (rev. 2)
 *   - Bugfix: --dupechk wasn't checking if match string lenghts are the same (rev. 3)
 *   - Bugfix: skipping empty directories was failing (since 0.7-1) ,
 *   -   empty directories weren't getting detected 100% properly (rev. 4)
 *   - Added --batch, outputs dirlog records non-formatted (for easier parsing with
 *       external tools) (rev. 5)
 *
 * v0.6:
 *
 *  - Added --fix, attempts to correct differences between filesystem and dirlog
 *     (works together with --check)
 *  - Various bugfixes
 *  - Got rid of unecessary explicit dirlog/nukelog IO functions
 *     (g_fopen/g_close/g_read routines do everything now)
 *  - Bugfix: -s was broken (since 0.6) (rev. 1)
 *  - Bugfix: --check was processing nuked releases as non-nuked (since 0.6) (rev. 1)
 *  - Bugfix: directory nuke status wasn't read properly from nukelog; in cases when
 *      directory was nuked/unnuked multiple times, multiple records can exist in
 *      nukelog - only last one should be read (rev. 2)
 *  - Settings macro's can now be overriden from includes (usefull for storing
 *      customized settings) (rev .3)
 *  - Modified --fix to remove empty directories (rev. 4)
 *  - File seeking 64 bit aligned (rev. 4)
 *  - Code cleanup (rev .4)
 *
 * v0.5:
 *
 *  - Dirlog and nukelog now fully buffers into memory (large performance
 *  	improvement); if data file is larger than DB_MAX_SIZE (--memlimit),
 *  	buffering is not used (-v prints notices about this)
 *  - Added --nobuffer, turns off buffering
 *  - Bugfix: --siteroot didn't have any effect (rev. 2)
 *  - Added --dupechk: looks for duplicate records within dirlog and prints
 *      to stdout (rev. 3)
 *  - Bugfix: command line options were not read properly in some cases (rev. 4)
 *  - Added --memlimit, overrides the default max buffer limit defined by
 *      DB_MAX_SIZE macro (rev. 4)
 *  - Fixed command line args processing to abort & warn when not enough
 *      parameters supplied (rev. 5)
 *  - Added -u, updates dirlog instead of rebuilding it (used with -r) (rev. 6)
 *
 * v0.4:
 *
 *  - Added nukelog read capability
 *  - Bugfix: now sets proper dir status by referencing nukelog,
 *      instead of setting status based on directory nuke labels
 *  - Added --nukedump - prints nukelog to stdout (formatted)
 *  - While dumping dirlog (-d), looks up nukelog and prints nuke
 *      stats, if any
 *  - Verification (--check) now takes into account the nukelog:
 *      checks if status flags (dirlog<->nukelog) match,
 *      warns on missing nukelog entries
 *  - Added --help
 *  - Now does full siteroot recursion when .folders file is missing or -f
 *      flag is given (rev. 1)
 *  - Added regex skip filters at dirlog import (PREG_DIR_SKIP macro) (rev. 2)
 *
 *
 * v0.3:
 *
 *  - Bugfix: dirlog data header was misaligned, added support
 *     	for multiple gl versions (determined by GLVERSION var)
 *  - Bugfix: absolute paths  instead of relative to root set used
 *     	in dirname field of the data header
 *  - Bugfix: nuked dirs imported without proper status set in data
 *  	header
 *  - Added -s option, imports individual folders; use quotation
 *     	marks if adding multiple folders (e.g -s "/dir1 /dir2 /dir3")
 *  - SFV generation, --sfv option when importing will generate
 *     	new sfv files and remove existing ones
 *  - Added --nowrite, acts normally except it does no actual writing
 *  	(including SFV gen)
 *  - Bugfix: on some systems, file type was not recognized properly by
 *  	readdir, instead it now gets info from stat function (rev. 1)
 *  - Bugfix: dirlog data was not displayer properly on 32 bit systems (rev. 2)
 *  - Bugfix: failed creating new backup when one already existed (rev. 3)
 *  - Added --glroot, --siteroot, --dirlog and --folders options (rev. 4)
 *  - .folders file now requires paths relative to siteroot (no / needed in
 *  	front) (rev. 4)
 *  - Requires glconf.h from /bin/sources to determine proper headers, compile from
 *  	that folder or set proper path to glconf.h in dirupdate.c (rev. 4)
 *  - Command line arguments now use '=' with some options (e.g. glroot=/glftpd)
 *  	(rev. 4)
 *  - Stats output on write fixed (was not showing properly or not at all) (rev. 5)
 *  - Output formatting fixed up a bit (rev. 5)
 *  - Bugfix: --check output formatting was broken (rev. 5)
 *  - Bugfix: -f (force) overwrite when doing -s was broken (rev. 6)
 *  - Output formatting fix (rev. 6)
 *  - Various small bugfixes and improvements in all revisions
 *
 * v0.2:
 *
 *  - Bugfix: directory handles weren't getting cleaned
 *    	up on recursion, hitting max open handle limit.
 *  - Flag parser, easy to add new command line arg options
 *  - Added -r option (recursive dirlog generation), reads
 *    	folders and depths from a file specified by DU_FLD
 *  - Backs up dirlog before modifying it
 *  - Added -v (verbose), -vv (more verbose) and -f
 *    	(force) options
 *  - Added -d (outputs records to stdout, formatted)
 *  - Added --check, compares records in dirlog and filesystem
 *   	and warns on differences
 *
