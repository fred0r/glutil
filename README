 * Capabilities:
 *
 *  - Import individual/missing records or rebuild entire dirlog based on file-system
 * 		and nukelog data (read below)
 *  - Rebuild existing dirlog/nukelog using regex/custom filtering methods
 *  - Display dirlog/nukelog records in human readable formats
 *  - Compare dirlog data against filesystem/nukelog to spot differences and
 *      fix them
 *  - Search for duplicates in dirlog
 *  - Generate SFV files inside respective folders
 *
 * Installation:
 *
 *  - Install zlib development files (for crc32 calc)
 *  - Compile:
 *
 *      cp dirupdate.c /<glroot>/bin/sources
 *      cd /<glroot>/bin/sources
 *      vi dirupdate.c  (set proper paths in upper variables)
 *      cc dirupdate.c -o ../dirupdate -Wall -O3
 *
 *      Some warnings might pop up (should be safe)
 *      glconf.h (found in /bin/sources) is needed to compile properly, make sure
 *      it is in the same folder or change it's location in dirupdate.c 
 *
 * 'dirupdate.folders' file (filesystem based rebuild only):
 *
 *  To avoid importing junk data into dirlog, a file defined by 'du_fld' macro
 *  in dirupdate.c (or at runtime with --folders argument) can be used when running
 *  in recursive mode (-r).
 *  Each line should contain a relative to site root PATH (no / in front or
 *  back required) and depth to scan at, separated by space.
 *
 *  Example:
 *
 *    MP3 2
 *    TV-XVID 1
 *    XVID 1
 *    0DAY 2
 *    APPS 1
 *    ARCHIVE/APPS 2
 *    ARCHIVE/TV-XVID 3
 *
 *
 * 	Depth value defines the exact level of a folder's directory tree, at which
 * 	the tool imports folders to dirlog, this way, avoiding irrelevant entries.
 *
 * 	For example:
 *
 *    A daily/weekly sorted release dir structure usually looks like:
 *
 *     /mp3/0601/some-album-1-la
 *     /mp3/0601/some-album-2-la
 *     /mp3/0602/some-other-album-1-la
 *     ..
 *
 *    We want to avoid importing /mp3/0602 folder itself into dirlog and import
 *    only what is inside it.
 *
 *      MP3 2
 *
 *    This would NOT import 'mp3/0601/' and 'mp3/0602/' folders, but would import
 *    'some-album-1-la/', 'some-album-2-la/' and 'some-other-album-1-la/'.
 *    Folders inside 'some-album-..' folders are not imported.
 *
 *      MP3 1
 *
 *    This would import '0601/' and '0602/' only, scanning all content inside it.
 *
 *    There's no reason you can't do this:
 *
 *      MP3 1
 *      MP3 2
 *
 *    But in this particular case, having dated folders in there likely poses no
 *    advantage.
 *
 *    But maybe you'd want to have individual CD/DVD dirs some section:
 *
 *    	XVID 1
 *    	XVID 2
 *
 *    This does two passes, one on each directory tree level, 1 does the releases,
 *    2 the folders inside them.
 *
 *    Using -f (force) when recursing ignores the folders file and imports
 *    every single folder inside gl's site root into your dirlog (scanning it
 *    for sizes/file counts).
 *
 *    If folders file is missing, it automatically does full siteroot recursion
 *    (same as '-f').
 *
